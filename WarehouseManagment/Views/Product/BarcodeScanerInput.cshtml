<div class="col-4" >
    <form method="get">
        <div class="input-group mb-3 mt-5">
            <input type="text" id="barcode" name="id" class="form-control" placeholder="Product ID" aria-label="product ID" aria-describedby="basic-addon2">
            <div class="input-group-append">
                <input type="submit" value="Submit" class="btn btn-outline-danger" />
            </div>
        </div>
    </form>
</div>
<div class="product-container col-6" ></div>

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#barcode').on('input', function () {
                var scannedBarcode = $(this).val();

                $.ajax({
                    url: '/Sale/Index',
                    type: 'GET',
                    data: { barcode: scannedBarcode },
                    success: function (productData) {
                        console.log(productData);
                        createProductRow(productData);
                    }
                });
            })

            function createProductRow(productData) {
                var newRow = $('<div class="row product-row">');
                newRow.append($('<div class="col ml-3 product-sku">').text("Продажба на артикул : " + productData.productData.productSKU + ' ( ' + productData.productData.description + ' )'));
                var unitPriceRow = $('<div class="input-group input-group-lg mb-2">');
                var unitPriceColDescr = $('<span class="input-group-text" id="inputGroup-sizing-lg">Единична цена :</span>');
                var unitPriceInput = $('<input type="number" class="product-unit-price form-control" aria-label="Disabled input example" disabled>').val(productData.productData.unitPrice);
                unitPriceRow.append(unitPriceColDescr);
                unitPriceRow.append(unitPriceInput);
                newRow.append(unitPriceRow);
                newRow.append(createPaymentMethodDropdown(productData.productData.paymentMethod));
                var quantityRow = $('<div class="input-group input-group-lg mb-2">');
                var quantityColDescr = $('<span class="input-group-text" id="inputGroup-sizing-lg">Количество :</span>');
                var quantityInput = $('<input type="number" min="1" class="product-quantity form-control">').val(1);
                quantityRow.append(quantityColDescr);
                quantityRow.append(quantityInput);
                newRow.append(quantityRow);
                newRow.append(createDiscountDropdown(productData.productData.discount));
                var totalPriceRow = $('<div class="input-group input-group-lg mb-2">');
                var totalPriceColDescr = $('<span class="input-group-text" id="inputGroup-sizing-lg">Тотал цена :</span>');
                var totalPriceInput = $('<input class="product-total-price form-control" id="TotalPrice" aria-label="Disabled input example" disabled>').val(productData.productData.unitPrice);
                totalPriceRow.append(totalPriceColDescr);
                totalPriceRow.append(totalPriceInput);
                newRow.append(totalPriceRow);
                var saleButton = $('<button class="p-2 mb-2 sale-button btn btn-primary">Продай</button>');


                function UpdateTotalPriceByDiscount() {
                    var unitPrice = parseFloat(unitPriceInput.val());
                    var quantity = parseInt(quantityInput.val());
                    var discount = parseFloat($('.product-discount option:selected').val());

                    if (isNaN(discount)) {
                        discount = 0;
                    }

                    var totalPrice = unitPrice * quantity;

                    if (discount > 0) {
                        totalPrice = (unitPrice - (unitPrice * discount / 100)) * quantity;
                    } else {
                        totalPrice = unitPrice * quantity;
                    }

                    $('#TotalPrice').val(totalPrice);
                }
                $('.product-container').append(newRow);
                newRow.find('.product-discount').on('change', UpdateTotalPriceByDiscount);

                function UpdateTotalPriceByQuantity() {
                    var unitPrice = parseFloat(unitPriceInput.val());
                    var quantity = parseInt(quantityInput.val());
                    var discount = parseFloat($('.product-discount option:selected').val());

                    if (isNaN(discount)) {
                        discount = 0;
                    }

                    var totalPrice = unitPrice * quantity;

                    if (discount > 0) {
                        totalPrice = (unitPrice - (unitPrice * discount / 100)) * quantity;
                    } else {
                        totalPrice = unitPrice * quantity;
                    }
                    $('#TotalPrice').val(totalPrice);
                }
                quantityInput.on('input', UpdateTotalPriceByQuantity);
                UpdateTotalPriceByQuantity();

                saleButton.on('click', function () {
                    var sku = productData.productData.productSKU;
                    var unitPrice = parseFloat(unitPriceInput.val());
                    var discount = parseInt($('.product-discount option:selected').val());
                    var quantity = parseInt(quantityInput.val());
                    var date = productData.productData.soldDate;
                    var productId = productData.productData.productId;
                    var productInventoryId = productData.productData.productInventoryId;
                    var paymentMethod = parseInt($('.product-paymentMethod option:selected').val());
                    var totalPrice;
                    if (discount > 0) {
                        totalPrice = (unitPrice - (unitPrice * discount / 100)) * quantity;
                    } else {
                        totalPrice = unitPrice * quantity;
                    }

                    var sale = {
                        productSKU: sku,
                        unitPrice: unitPrice,
                        discount: discount,
                        quantity: quantity,
                        soldDate: date,
                        productId: productId,
                        totalPrice: totalPrice,
                        productInventoryId: productInventoryId,
                        paymentMethod: paymentMethod
                    };

                    $.ajax({
                        url: '/Sale/Create',
                        type: 'POST',
                        data: sale,
                        success: function (response) {
                            if (response.success) {
                                // Handle a successful sale (e.g., update UI)
                                // Change the button text to "SOLD" and disable discount and quantity inputs
                                $('.product-quantity').attr("disabled", true);
                                $('.sale-button').text('SOLD');
                                $('.sale-button').addClass('unsold-button').removeClass('sale-button');
                                // Display the "UNSOLD IT" button (you can add the logic for this)
                            } else {
                                // Handle an unsuccessful sale (e.g., show an error message)
                                alert('Sale failed: ' + response.message);
                            }
                        }
                    });
                });

                newRow.append(saleButton);
                $('.product-container').append(newRow);
            }
            //Create discount dropdown
            function createDiscountDropdown(selectedDiscount) {
                var container = $('<div class="input-group input-group-lg mb-2">');
                var description = $('<label class="input-group-text" for="inputGroupSelect01">Отстъпка : </label>');
                var dropdown = $('<select class="product-discount form-select" id="inputGroupSelect01">');
                var discountValues = [
        @foreach (var value in Enum.GetValues(typeof(Discount)).Cast<Discount>())
        {
            <text>{ value: @((int)value) }, </text>
        }
            ];

                discountValues.forEach(function (option) {
                    var optionElement = $('<option>').attr('value', option.value).text(option.value + "%");
                    
                    if (option.value === selectedDiscount) {
                        optionElement.attr('selected', 'selected');
                    }
                    dropdown.append(optionElement);
                });

                container.append(description);
                container.append(dropdown);

                return container;
            }

            //Create PaymentMethod dropdown
            function createPaymentMethodDropdown(selectedPaymentMethod) {
                var container = $('<div class="input-group input-group-lg mb-2">');
                var description = $('<label class="input-group-text" for="inputGroupSelect01">Плащане : </label>');
                var dropdown = $('<select class="product-paymentMethod form-select">');
                var paymentMethods = [
        @foreach (var value in Enum.GetValues(typeof(PaymentMethod)).Cast<PaymentMethod>())
        {
            <text>{ value: "@((int)value)", text: "@value" }, </text>
        }
            ];

                for (var i = 0; i < paymentMethods.length; i++) {
                    var optionElement = $('<option>').attr('value', paymentMethods[i].value).text(paymentMethods[i].text);
                    if (paymentMethods[i].value === selectedPaymentMethod) {
                        optionElement.attr('selected', 'selected');
                    }
                    dropdown.append(optionElement);
                }

                container.append(description);
                container.append(dropdown);

                return container;
            }

            

            // Disable discount and quantity fields and change the button text to "SOLD"
            function disableFields() {
                $('.product-quantity').attr("disabled", true);
                $('.sale-button').text('SOLD');
                $('.sale-button').addClass('unsold-button').removeClass('sale-button');
            }

            // Handle "UNSOLD IT" button click event
            $('.unsold-button').on('click', function () {
                // Make an AJAX request to update the quantity in the database
                // Remove the product row after a successful update
                // You should add this functionality based on your backend API
            });
        })
    </script>
}